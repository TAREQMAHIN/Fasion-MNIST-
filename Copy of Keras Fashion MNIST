{"nbformat":4,"nbformat_minor":0,"metadata":{"accelerator":"TPU","colab":{"name":"Copy of Keras Fashion MNIST","provenance":[{"file_id":"https://github.com/tensorflow/tpu/blob/master/tools/colab/fashion_mnist.ipynb","timestamp":1572535616115}],"collapsed_sections":["N6ZDpd9XzFeN"],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"colab_type":"text","id":"N6ZDpd9XzFeN"},"source":["##### Copyright 2018 The TensorFlow Hub Authors.\n","\n","Licensed under the Apache License, Version 2.0 (the \"License\");"]},{"cell_type":"code","metadata":{"cellView":"form","colab_type":"code","id":"KUu4vOt5zI9d","colab":{}},"source":["# Copyright 2018 The TensorFlow Hub Authors. All Rights Reserved.\n","#\n","# Licensed under the Apache License, Version 2.0 (the \"License\");\n","# you may not use this file except in compliance with the License.\n","# You may obtain a copy of the License at\n","#\n","#     http://www.apache.org/licenses/LICENSE-2.0\n","#\n","# Unless required by applicable law or agreed to in writing, software\n","# distributed under the License is distributed on an \"AS IS\" BASIS,\n","# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n","# See the License for the specific language governing permissions and\n","# limitations under the License.\n","# =============================================================================="],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"edfbxDDh2AEs"},"source":["## Fashion MNIST with Keras and TPUs"]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"RNo1Vfghpa8j"},"source":["## Overview\n","\n","In this example, you can try out using tf.keras and Cloud TPUs to train a model on the fashion MNIST dataset. The model trains for 10 epochs on Cloud TPU and takes approximately 2 minutes to run.\n","\n","This notebook is hosted on GitHub. To view it in its original repository, after opening the notebook, select **File > View on GitHub**."]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"dgAHfQtuhddd"},"source":["## Learning objectives\n","\n","In this Colab, you will learn how to:\n","*   Code for a standard conv-net that has 3 layers with drop-out and batch normalization between each layer in Keras.\n","*   Create and compile the model under a distribution strategy in order ot use TPUs.\n","*   Run a prediction to see how well the model can predict fashion categories and output the result."]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"QrprJD-R-410"},"source":["## Instructions"]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"_I0RdnOSkNmi"},"source":["<h3>  &nbsp;&nbsp;Train on TPU&nbsp;&nbsp; <a href=\"https://cloud.google.com/tpu/\"><img valign=\"middle\" src=\"https://raw.githubusercontent.com/GoogleCloudPlatform/tensorflow-without-a-phd/master/tensorflow-rl-pong/images/tpu-hexagon.png\" width=\"50\"></a></h3>\n","\n","1. On the main menu, click Runtime and select **Change runtime type**. Set \"TPU\" as the hardware accelerator.\n","1. Click Runtime again and select **Runtime > Run All**. You can also run the cells manually with Shift-ENTER. "]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"5eEM-XOvURoU"},"source":["TPUs are located in Google Cloud, for optimal performance, they read data directly from Google Cloud Storage (GCS)"]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"Lvo0t7XVIkWZ"},"source":["## Data, model, and training"]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"MICrRv8rmXVq"},"source":["Begin by downloading the fashion MNIST dataset using `tf.keras.datasets`, as shown below."]},{"cell_type":"code","metadata":{"colab_type":"code","id":"Zo-Yk6LFGfSf","colab":{"base_uri":"https://localhost:8080/","height":153},"outputId":"e5ec1f27-d5d8-4d3c-a06b-ca5087678fa7","executionInfo":{"status":"ok","timestamp":1572533953309,"user_tz":-330,"elapsed":3833,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["import tensorflow as tf\n","import numpy as np\n","\n","import distutils\n","if distutils.version.LooseVersion(tf.__version__) < '1.14':\n","    raise Exception('This notebook is compatible with TensorFlow 1.14 or higher, for TensorFlow 1.13 or lower please use the previous version at https://github.com/tensorflow/tpu/blob/r1.13/tools/colab/fashion_mnist.ipynb')\n","\n","(x_train, y_train), (x_test, y_test) = tf.keras.datasets.fashion_mnist.load_data()\n","\n","# add empty color dimension\n","x_train = np.expand_dims(x_train, -1)\n","x_test = np.expand_dims(x_test, -1)"],"execution_count":1,"outputs":[{"output_type":"stream","text":["Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-labels-idx1-ubyte.gz\n","32768/29515 [=================================] - 0s 0us/step\n","Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/train-images-idx3-ubyte.gz\n","26427392/26421880 [==============================] - 0s 0us/step\n","Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-labels-idx1-ubyte.gz\n","8192/5148 [===============================================] - 0s 0us/step\n","Downloading data from https://storage.googleapis.com/tensorflow/tf-keras-datasets/t10k-images-idx3-ubyte.gz\n","4423680/4422102 [==============================] - 0s 0us/step\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"Hgc2FZKVMx15"},"source":["### Define the model\n","\n","The following example uses a standard conv-net that has 3 layers with drop-out and batch normalization between each layer."]},{"cell_type":"code","metadata":{"colab_type":"code","id":"W7gMbs70GxA7","colab":{}},"source":["def create_model():\n","  model = tf.keras.models.Sequential()\n","  model.add(tf.keras.layers.BatchNormalization(input_shape=x_train.shape[1:]))\n","  model.add(tf.keras.layers.Conv2D(64, (5, 5), padding='same', activation='elu'))\n","  model.add(tf.keras.layers.MaxPooling2D(pool_size=(2, 2), strides=(2,2)))\n","  model.add(tf.keras.layers.Dropout(0.25))\n","\n","  model.add(tf.keras.layers.BatchNormalization(input_shape=x_train.shape[1:]))\n","  model.add(tf.keras.layers.Conv2D(128, (5, 5), padding='same', activation='elu'))\n","  model.add(tf.keras.layers.MaxPooling2D(pool_size=(2, 2)))\n","  model.add(tf.keras.layers.Dropout(0.25))\n","\n","  model.add(tf.keras.layers.BatchNormalization(input_shape=x_train.shape[1:]))\n","  model.add(tf.keras.layers.Conv2D(256, (5, 5), padding='same', activation='elu'))\n","  model.add(tf.keras.layers.MaxPooling2D(pool_size=(2, 2), strides=(2,2)))\n","  model.add(tf.keras.layers.Dropout(0.25))\n","\n","  model.add(tf.keras.layers.Flatten())\n","  model.add(tf.keras.layers.Dense(256))\n","  model.add(tf.keras.layers.Activation('elu'))\n","  model.add(tf.keras.layers.Dropout(0.5))\n","  model.add(tf.keras.layers.Dense(10))\n","  model.add(tf.keras.layers.Activation('softmax'))\n","  return model"],"execution_count":0,"outputs":[]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"xLeZATVaNAnE"},"source":["### Train on the TPU\n","\n","To begin training, construct the model on the TPU and then compile it."]},{"cell_type":"code","metadata":{"colab_type":"code","id":"pWEYmd_hIWg8","colab":{"base_uri":"https://localhost:8080/","height":1000},"outputId":"d9151a2e-1801-4a54-d9bb-260208ffa3a2","executionInfo":{"status":"ok","timestamp":1572534041405,"user_tz":-330,"elapsed":50431,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["import os\n","\n","resolver = tf.contrib.cluster_resolver.TPUClusterResolver('grpc://' + os.environ['COLAB_TPU_ADDR'])\n","tf.contrib.distribute.initialize_tpu_system(resolver)\n","strategy = tf.contrib.distribute.TPUStrategy(resolver)\n","\n","with strategy.scope():\n","  model = create_model()\n","  model.compile(\n","      optimizer=tf.keras.optimizers.Adam(learning_rate=1e-3, ),\n","      loss='sparse_categorical_crossentropy',\n","      metrics=['sparse_categorical_accuracy'])\n","\n","model.fit(\n","    x_train.astype(np.float32), y_train.astype(np.float32),\n","    epochs=17,\n","    steps_per_epoch=60,\n","    validation_data=(x_test.astype(np.float32), y_test.astype(np.float32)),\n","    validation_freq=17\n",")\n","\n","model.save_weights('./fashion_mnist.h5', overwrite=True)"],"execution_count":4,"outputs":[{"output_type":"stream","text":["WARNING:tensorflow:\n","The TensorFlow contrib module will not be included in TensorFlow 2.0.\n","For more information, please see:\n","  * https://github.com/tensorflow/community/blob/master/rfcs/20180907-contrib-sunset.md\n","  * https://github.com/tensorflow/addons\n","  * https://github.com/tensorflow/io (for I/O related ops)\n","If you depend on functionality not listed there, please file an issue.\n","\n","INFO:tensorflow:Initializing the TPU system: 10.84.96.146:8470\n","INFO:tensorflow:Finished initializing TPU system.\n","INFO:tensorflow:Querying Tensorflow master (grpc://10.84.96.146:8470) for TPU system metadata.\n","INFO:tensorflow:Found TPU system:\n","INFO:tensorflow:*** Num TPU Cores: 8\n","INFO:tensorflow:*** Num TPU Workers: 1\n","INFO:tensorflow:*** Num TPU Cores Per Worker: 8\n","INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:CPU:0, CPU, -1, 13282759475881846731)\n","INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU:0, TPU, 17179869184, 14986280598775275905)\n","INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU:1, TPU, 17179869184, 7089438689078364594)\n","INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU:2, TPU, 17179869184, 9241337137729462402)\n","INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU:3, TPU, 17179869184, 4714593138725326186)\n","INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU:4, TPU, 17179869184, 7759195392688372800)\n","INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU:5, TPU, 17179869184, 10299238036125815672)\n","INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU:6, TPU, 17179869184, 12216559545410294636)\n","INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU:7, TPU, 17179869184, 304306026101619241)\n","INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:TPU_SYSTEM:0, TPU_SYSTEM, 8589934592, 7766815196835892997)\n","INFO:tensorflow:*** Available Device: _DeviceAttributes(/job:worker/replica:0/task:0/device:XLA_CPU:0, XLA_CPU, 17179869184, 5333940423540991294)\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/ops/resource_variable_ops.py:1630: calling BaseResourceVariable.__init__ (from tensorflow.python.ops.resource_variable_ops) with constraint is deprecated and will be removed in a future version.\n","Instructions for updating:\n","If using Keras pass *_constraint arguments to layers.\n","WARNING:tensorflow:From /usr/local/lib/python3.6/dist-packages/tensorflow_core/python/keras/layers/normalization.py:477: where (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n","Instructions for updating:\n","Use tf.where in 2.0, which has the same broadcast rule as np.where\n","Epoch 1/17\n","60/60 [==============================] - 4s 64ms/step - loss: 1.1850 - sparse_categorical_accuracy: 0.6723\n","Epoch 2/17\n","60/60 [==============================] - 1s 21ms/step - loss: 0.5383 - sparse_categorical_accuracy: 0.8148\n","Epoch 3/17\n","60/60 [==============================] - 1s 21ms/step - loss: 0.4446 - sparse_categorical_accuracy: 0.8473\n","Epoch 4/17\n","60/60 [==============================] - 1s 21ms/step - loss: 0.3855 - sparse_categorical_accuracy: 0.8650\n","Epoch 5/17\n","60/60 [==============================] - 1s 22ms/step - loss: 0.3507 - sparse_categorical_accuracy: 0.8763\n","Epoch 6/17\n","60/60 [==============================] - 1s 21ms/step - loss: 0.3172 - sparse_categorical_accuracy: 0.8858\n","Epoch 7/17\n","60/60 [==============================] - 1s 21ms/step - loss: 0.2962 - sparse_categorical_accuracy: 0.8930\n","Epoch 8/17\n","60/60 [==============================] - 1s 22ms/step - loss: 0.2713 - sparse_categorical_accuracy: 0.9031\n","Epoch 9/17\n","60/60 [==============================] - 1s 22ms/step - loss: 0.2509 - sparse_categorical_accuracy: 0.9088\n","Epoch 10/17\n","60/60 [==============================] - 1s 23ms/step - loss: 0.2350 - sparse_categorical_accuracy: 0.9138\n","Epoch 11/17\n","60/60 [==============================] - 1s 22ms/step - loss: 0.2239 - sparse_categorical_accuracy: 0.9177\n","Epoch 12/17\n","60/60 [==============================] - 1s 22ms/step - loss: 0.2148 - sparse_categorical_accuracy: 0.9198\n","Epoch 13/17\n","60/60 [==============================] - 1s 22ms/step - loss: 0.1963 - sparse_categorical_accuracy: 0.9266\n","Epoch 14/17\n","60/60 [==============================] - 1s 22ms/step - loss: 0.1871 - sparse_categorical_accuracy: 0.9317\n","Epoch 15/17\n","60/60 [==============================] - 1s 22ms/step - loss: 0.1823 - sparse_categorical_accuracy: 0.9316\n","Epoch 16/17\n","60/60 [==============================] - 1s 22ms/step - loss: 0.1696 - sparse_categorical_accuracy: 0.9363\n","Epoch 17/17\n","57/60 [===========================>..] - ETA: 0s - loss: 0.1651 - sparse_categorical_accuracy: 0.9380INFO:tensorflow:Running validation at fit epoch: 16\n","10/10 [==============================] - 3s 298ms/step\n","10/10 [==============================] - 3s 298ms/step\n","60/60 [==============================] - 6s 96ms/step - loss: 0.1645 - sparse_categorical_accuracy: 0.9385 - val_loss: 0.2325 - val_sparse_categorical_accuracy: 0.9214\n"],"name":"stdout"}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"ESL6ltQTMm05"},"source":["### Check the results (inference)\n","\n","Now that you are done training, see how well the model can predict fashion categories!"]},{"cell_type":"code","metadata":{"colab_type":"code","id":"SaYPv_aKId2d","colab":{"base_uri":"https://localhost:8080/","height":490},"outputId":"21a12a4e-7237-4fec-8ad0-ad824916bb49","executionInfo":{"status":"ok","timestamp":1572534083918,"user_tz":-330,"elapsed":4668,"user":{"displayName":"","photoUrl":"","userId":""}}},"source":["LABEL_NAMES = ['t_shirt', 'trouser', 'pullover', 'dress', 'coat', 'sandal', 'shirt', 'sneaker', 'bag', 'ankle_boots']\n","\n","\n","cpu_model = create_model()\n","cpu_model.load_weights('./fashion_mnist.h5')\n","\n","from matplotlib import pyplot\n","%matplotlib inline\n","\n","def plot_predictions(images, predictions):\n","  n = images.shape[0]\n","  nc = int(np.ceil(n / 4))\n","  f, axes = pyplot.subplots(nc, 4)\n","  for i in range(nc * 4):\n","    y = i // 4\n","    x = i % 4\n","    axes[x, y].axis('off')\n","    \n","    label = LABEL_NAMES[np.argmax(predictions[i])]\n","    confidence = np.max(predictions[i])\n","    if i > n:\n","      continue\n","    axes[x, y].imshow(images[i])\n","    axes[x, y].text(0.5, 0.5, label + '\\n%.3f' % confidence, fontsize=14)\n","\n","  pyplot.gcf().set_size_inches(8, 8)  \n","\n","plot_predictions(np.squeeze(x_test[:16]), \n","                 cpu_model.predict(x_test[:16]))"],"execution_count":5,"outputs":[{"output_type":"display_data","data":{"image/png":"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\n","text/plain":["<Figure size 576x576 with 16 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"colab_type":"text","id":"2a5cGsSTEBQD"},"source":["## What's next\n","\n","* Learn about [Cloud TPUs](https://cloud.google.com/tpu/docs) that Google designed and optimized specifically to speed up and scale up ML workloads for training and inference and to enable ML engineers and researchers to iterate more quickly.\n","* Explore the range of [Cloud TPU tutorials and Colabs](https://cloud.google.com/tpu/docs/tutorials) to find other examples that can be used when implementing your ML project.\n","\n","On Google Cloud Platform, in addition to GPUs and TPUs available on pre-configured [deep learning VMs](https://cloud.google.com/deep-learning-vm/),  you will find [AutoML](https://cloud.google.com/automl/)*(beta)* for training custom models without writing code and [Cloud ML Engine](https://cloud.google.com/ml-engine/docs/) which will allows you to run parallel trainings and hyperparameter tuning of your custom models on powerful distributed hardware.\n"]}]}